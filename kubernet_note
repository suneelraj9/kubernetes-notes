YAML - yet another markup language
 Human friendly serialization standard

Using docker with respective of yml mark up language multiple containers can be spinned

  mkdir /root/wordpress
  yum install docker-compose
  vi docker-compose.yml
   [copy and paste the below code]
  docker-compose up -d

After install you can open the browser and run redb:8000 to start using wordpress locally on the system

 Docker compose file
 ********************
 version: '2.0'
 services:
  db:
    image: mysql:5.7
    volumes:
     - db_data:/var/lib/mqsql
    restart: always
    environment:
     MYSQL_ROOT_PASSWORD: somewordpress
     MYSQL_DATABASE: wordpress
     MYSQL_USER: wordpress
     MYSQL_PASSWORD: wordpress

  wordpress:
   depends_on:
     - db
   image: wordpress:latest
   ports:
    - "8000:80"
   restart: always
   environment:
    WORDPRESS_DB_HOST: db:3306
    WORDPRESS_DB_USER: wordpress
    WORDPRESS_DB_PASSWORD: wordpress
 volumes:
  db_data:
  ************************

Why container Orchestration?
****************************

  >Container orchestration manages availability, scaling and networking of the containers

  >It helps in monitoring the cluster

  >It helps in managing the timing of container creation

  >It helps in container configuration in order to allow containers to communicate with one another
  
Top 3 Container Orchestrators
*****************************
  >Docker Swarm
  >Mesos
  >Kubernetes

  Docker swarm - It can run only on docker run(docker engine)
  kubernets - It can run on any operating system(container)

  Docker swarm - Volumes are not tightly coupled
  kubernet - volumes are tighly coupled

  Docker swarm - less reliable, less cost
  kubernet - More reliable, expensive

Creating a swarm on the manager1 machine:
  docker swarm init --advertise-addr 192.168.56.101

  Result of the output need to run it on node which we are trying to joined as cluster

Check the node details of cluster
  docker node ls

pull the docker image and create the service
  #docker pull httpd
  #docker service create --name web -p 80:80 httpd -d

check the services which running
  #docker service ls 
